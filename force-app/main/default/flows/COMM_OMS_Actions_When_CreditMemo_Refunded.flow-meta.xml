<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Call_CPMS</name>
        <label>Call CPMS</label>
        <locationX>578</locationX>
        <locationY>492</locationY>
        <actionName>COMM_SL_OMS_CPMSHandler</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>invoiceIds</name>
            <value>
                <elementReference>Get_Order_Summary_Invoice.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>COMM_SL_OMS_CPMSHandler</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Call_SAP_Handler</name>
        <label>Call SAP Handler</label>
        <locationX>842</locationX>
        <locationY>276</locationY>
        <actionName>COMM_SL_OMS_SAPHandler</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>objectIds</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>COMM_SL_OMS_SAPHandler</nameSegment>
    </actionCalls>
    <apiVersion>60.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <decisions>
        <name>All_Products_Returned</name>
        <label>All Products Returned</label>
        <locationX>182</locationX>
        <locationY>384</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>All_Returned</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Order_Product_Summary</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_OrderSummary_Status_Refunded</targetReference>
            </connector>
            <label>All Returned</label>
        </rules>
    </decisions>
    <description>This Flow will update Order Summary Status to Refunded if all products get Returned</description>
    <environments>Default</environments>
    <interviewLabel>OMS Actions When Credit Memo Refunded {!$Flow.CurrentDateTime}</interviewLabel>
    <label>OMS Actions When Credit Memo Refunded</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Order_Summary</name>
        <label>Get Order Summary</label>
        <locationX>578</locationX>
        <locationY>276</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Order_Summary_Invoice</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ReferenceEntityId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>OrderSummary</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Order_Summary_Invoice</name>
        <label>Get Order Summary Invoice</label>
        <locationX>578</locationX>
        <locationY>384</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Call_CPMS</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ReferenceEntityId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Order_Summary.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Invoice</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Order_Product_Summary</name>
        <label>Order Product Summary</label>
        <locationX>182</locationX>
        <locationY>276</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>All_Products_Returned</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OrderSummaryId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ReferenceEntityId</elementReference>
            </value>
        </filters>
        <filters>
            <field>TypeCode</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Product</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>RETURNED</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>OrderItemSummary</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Set_OrderSummary_Status_Refunded</name>
        <label>Set_OrderSummary_Status_Refunded</label>
        <locationX>50</locationX>
        <locationY>492</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ReferenceEntityId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Refunded</stringValue>
            </value>
        </inputAssignments>
        <object>OrderSummary</object>
    </recordUpdates>
    <start>
        <locationX>386</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Order_Product_Summary</targetReference>
        </connector>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Balance</field>
            <operator>EqualTo</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </filters>
        <filters>
            <field>NetCreditsApplied</field>
            <operator>GreaterThan</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </filters>
        <object>CreditMemo</object>
        <recordTriggerType>Update</recordTriggerType>
        <scheduledPaths>
            <connector>
                <targetReference>Get_Order_Summary</targetReference>
            </connector>
            <pathType>AsyncAfterCommit</pathType>
        </scheduledPaths>
        <scheduledPaths>
            <name>Async_Create_Credit_Memo</name>
            <connector>
                <targetReference>Call_SAP_Handler</targetReference>
            </connector>
            <label>Async Create Credit Memo</label>
            <maxBatchSize>5</maxBatchSize>
            <offsetNumber>0</offsetNumber>
            <offsetUnit>Minutes</offsetUnit>
            <recordField>CreatedDate</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
