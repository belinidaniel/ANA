<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>64.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <description>add queue member id to collection of ids</description>
        <name>add_queue_member_to_collection</name>
        <label>add queue member to collection</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>queueMemberIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>for_each_queue_member.UserOrGroupId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>for_each_queue_member</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>assign the found case to our auxiliary case variable</description>
        <name>assign_found_case_to_case_variable1</name>
        <label>assign found case to case variable</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>caseRecordFound</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Query_open_cases_owned_by_SABA_queue_update</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>open_SABA_cases</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>assign the found case to our auxiliary case variable</description>
        <name>assign_found_case_to_case_variable2</name>
        <label>assign found case to case variable</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>caseRecordFound</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Query_related_open_cases</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>open_SABA_cases</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>assignment action to set auxiliary variable accordingly</description>
        <name>set_recurring_subscription</name>
        <label>set recurring subscription</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>isRecurringSubscription</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>get_case_record_types</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>decision to check if any open cases belonging to any queue member were found</description>
        <name>any_open_member_owned_cases_found</name>
        <label>any open member owned cases found?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>open_SABA_cases</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>any_open_member_owned_cases_found_yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Query_related_open_cases</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>assign_found_case_to_case_variable2</targetReference>
            </connector>
            <label>yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>if_is_update</name>
        <label>if is update</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>query_Order_Item_Summary</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>no</defaultConnectorLabel>
        <rules>
            <name>if_is_update_yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Query_open_cases_owned_by_SABA_queue_update</targetReference>
            </connector>
            <label>yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>decision to check if the case owner is the queue</description>
        <name>Is_case_owner_SABA_queue</name>
        <label>Is case owner SABA queue?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>Get_SABA_queue_members</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>no</defaultConnectorLabel>
        <rules>
            <name>Is_case_owner_SABA_queue_yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Query_open_cases_owned_by_SABA_queue_update</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>assign_found_case_to_case_variable1</targetReference>
            </connector>
            <label>yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>is_recurring_subscription</name>
        <label>is recurring subscription?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>for_each_Order_Item_Summary</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>is_recurring_subscription_yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>for_each_Order_Item_Summary.COMM_SubscriptionNumber__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>set_recurring_subscription</targetReference>
            </connector>
            <label>yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>check if there are any open SABA cases</description>
        <name>open_SABA_cases</name>
        <label>open SABA cases?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>open_SABA_cases_no</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>caseRecordFound</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>query_Order_Item_Summary</targetReference>
            </connector>
            <label>no</label>
        </rules>
    </decisions>
    <description>https://jira.ana.pt/browse/TICKET-263934</description>
    <environments>Default</environments>
    <formulas>
        <description>auxiliary formula that will either be &quot;Recurring Public Subscription&quot; or &quot;New Public Subscription&quot; depending on the isRecurringSubscription variable</description>
        <name>caseRecordTypeName</name>
        <dataType>String</dataType>
        <expression>IF({!isRecurringSubscription}, &quot;Recurring Public Subscription&quot;, &quot;New Public Subscription&quot;)</expression>
    </formulas>
    <interviewLabel>Order Summary: Create SABA Case {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Order Summary: Create SABA Case</label>
    <loops>
        <description>loop over each Order Item Summary</description>
        <name>for_each_Order_Item_Summary</name>
        <label>for each Order Item Summary</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>query_Order_Item_Summary</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>is_recurring_subscription</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>get_case_record_types</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>loop to iterate over each queue member</description>
        <name>for_each_queue_member</name>
        <label>for each queue member</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>Get_SABA_queue_members</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>add_queue_member_to_collection</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Query_related_open_cases</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>create a case record related to the order summary and assign it to SABA queue</description>
        <name>create_a_new_case_and_assign_to_queue</name>
        <label>create a new case and assign to queue</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <inputAssignments>
            <field>COMM_OrderSummary__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_SABA_queue_id.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>get_case_record_types.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <description>get records action to query case record types for: recurring or new public subscription</description>
        <name>get_case_record_types</name>
        <label>get case record types</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>create_a_new_case_and_assign_to_queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>caseRecordTypeName</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>query records to find SABA queue id</description>
        <name>Get_SABA_queue_id</name>
        <label>Get SABA queue id</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>if_is_update</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>COMM_SubscriptionRequestSABA</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>get SABA queue members or queue id</description>
        <name>Get_SABA_queue_members</name>
        <label>Get SABA queue members</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>for_each_queue_member</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_SABA_queue_id.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>get cases owned by the queue</description>
        <name>Query_open_cases_owned_by_SABA_queue_update</name>
        <label>Query open cases owned by SABA queue</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_case_owner_SABA_queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsClosed</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>COMM_OrderSummary__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>OwnerId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_SABA_queue_id.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>retrieve all the related Order Item Summary entries</description>
        <name>query_Order_Item_Summary</name>
        <label>query Order Item Summary</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>for_each_Order_Item_Summary</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OrderSummaryId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>OrderItemSummary</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>get records action to query any related open SABA cases</description>
        <name>Query_related_open_cases</name>
        <label>Query related open cases</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>any_open_member_owned_cases_found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsClosed</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>COMM_OrderSummary__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>OwnerId</field>
            <operator>In</operator>
            <value>
                <elementReference>queueMemberIds</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_SABA_queue_id</targetReference>
        </connector>
        <filterLogic>1 AND 2</filterLogic>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Paid</stringValue>
            </value>
        </filters>
        <filters>
            <field>COMM_SalesType__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>VD</stringValue>
            </value>
        </filters>
        <object>OrderSummary</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
    <variables>
        <description>case type variable that will be populated if an open SABA assigned case was found</description>
        <name>caseRecordFound</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <description>auxiliary variable that will let us discern if subscription is recurring or not</description>
        <name>isRecurringSubscription</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>collection variable that will hold the list of queue member ids</description>
        <name>queueMemberIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
